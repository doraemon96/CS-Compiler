
==================== FINAL INTERFACE ====================
2019-03-18 19:37:51.005107437 UTC

interface HaskTiger-0.1.0.0-ICRikAExwdr6IYW5QWtTsY:TigerMunch 8043
  interface hash: 277df137acd4b3597eaf2034def9bcae
  ABI hash: 2f3eaf33486dc344bbab95fd211b7d6b
  export-list hash: 8797b43c5cf876ffa4709105dab18030
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 84a707957232ceed2ddebd5ca4ca265a
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  TigerMunch.format
  TigerMunch.munchExp
  TigerMunch.munchStm
  TigerMunch.Instr{TigerMunch.LABEL TigerMunch.MOVE TigerMunch.OPER lassem llab massem mdst msrc oassem odst ojmp osrc}
module dependencies: State TigerSymbol TigerTemp TigerTree
                     TigerUnique
package dependencies: array-0.5.2.0 base-4.11.1.0* binary-0.8.5.1
                      bytestring-0.10.8.2 containers-0.5.11.0 deepseq-1.4.3.0
                      ghc-prim-0.5.2.0 integer-gmp-1.0.2.0 mtl-2.2.2 text-1.2.3.0
                      transformers-0.5.5.0
orphans: text-1.2.3.0:Data.Text binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.0:Data.Text.Show
         HaskTiger-0.1.0.0-ICRikAExwdr6IYW5QWtTsY:TigerUnique
         transformers-0.5.5.0:Control.Monad.Trans.Error
         base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Complex base-4.11.1.0:Data.Functor.Compose
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal containers-0.5.11.0:Data.Tree
                         text-1.2.3.0:Data.Text
import  -/  TigerTemp 3bc4ed564aeabe58cf535512ec048d33
  exports: 6b85f77b0bcc6e133222675af91d5259
  Label e211b5893645bd99d551cf10a36d620b
  Temp cab6f44f49e691c5c9d3b8607bf3d44a
import  -/  TigerTree b3822817a90e7d3d52e7faf396d1e661
  exports: 18931e72ed30bbeb7fa4b14d3a1cec66
  Exp 41dcc78a73675959911b133e79d2016d
  Stm 41dcc78a73675959911b133e79d2016d
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.Err 5e26aa744981f14e0f1e4d29c44ac52e
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
89dfc3b2b583ffb372a7eb56d876ddca
  $tc'LABEL :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9959537996219698689##
                   14791567556941830686##
                   TigerMunch.$trModule
                   TigerMunch.$tc'LABEL2
                   0#
                   TigerMunch.$tc'LABEL1) -}
54e35a7ebd9aff431c0722edb726c981
  $tc'LABEL1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
ee12e37af7953561ec6c9bf58ee793c8
  $tc'LABEL2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS TigerMunch.$tc'LABEL3) -}
7a6574d9420ba63cbfed80312e1c9c1a
  $tc'LABEL3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'LABEL"#) -}
bfc14e83b2a3dd8bf2e1f60d536bccb1
  $tc'MOVE :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7385981758226123752##
                   6400593544848084669##
                   TigerMunch.$trModule
                   TigerMunch.$tc'MOVE2
                   0#
                   TigerMunch.$tc'MOVE1) -}
814649fcceef5d9460a3b89f1e7b370a
  $tc'MOVE1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
2f4486c1b233650a47c2a9b27c8239af
  $tc'MOVE2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS TigerMunch.$tc'MOVE3) -}
8258358bc3f02a1a6a657eda9494d7e0
  $tc'MOVE3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'MOVE"#) -}
7454a839c1e466c462aa641803e38de6
  $tc'OPER :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14454858301191970690##
                   14695565855468446751##
                   TigerMunch.$trModule
                   TigerMunch.$tc'OPER2
                   0#
                   TigerMunch.$tc'OPER1) -}
9fed52fcb8658fd6394a4a1f29458654
  $tc'OPER1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
4240e22fb16bfc9068588decf47e3615
  $tc'OPER2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS TigerMunch.$tc'OPER3) -}
701df8fc42c512abd5200080447a3d88
  $tc'OPER3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'OPER"#) -}
f7933fc54f22f3ffc41d54ad38c469f5
  $tcInstr :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3223398825116645211##
                   17002349942606310298##
                   TigerMunch.$trModule
                   TigerMunch.$tcInstr1
                   0#
                   GHC.Types.krep$*) -}
43190319889374fe163ddd817cf44f76
  $tcInstr1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS TigerMunch.$tcInstr2) -}
e5916a1816da9b3e732d0cae602289b3
  $tcInstr2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Instr"#) -}
7145ae82071d778eaefac70a52586269
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   TigerMunch.$trModule3
                   TigerMunch.$trModule1) -}
41fbd5847f1a2b0a6b43c6e2ebe64a31
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS TigerMunch.$trModule2) -}
52663f0354e321887a77b4e4c463b0e2
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("TigerMunch"#) -}
14390aec51822a83bf02d74bfa1b58ed
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS TigerMunch.$trModule4) -}
ec41c370b38db51c812aca4ff50542c5
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("HaskTiger-0.1.0.0-ICRikAExwdr6IYW5QWtTsY"#) -}
eaa0a2f8d15411828d23f78c3671bdd9
  data Instr
    = OPER {oassem :: GHC.Base.String,
            odst :: [TigerTemp.Temp],
            osrc :: [TigerTemp.Temp],
            ojmp :: GHC.Base.Maybe [TigerTemp.Label]}
    | MOVE {massem :: GHC.Base.String,
            mdst :: TigerTemp.Temp,
            msrc :: TigerTemp.Temp}
    | LABEL {lassem :: GHC.Base.String, llab :: TigerTemp.Label}
62e4d6b3d58f4865a7d3732542f770d7
  format ::
    (TigerTemp.Temp -> GHC.Base.String)
    -> TigerMunch.Instr -> GHC.Base.String
  {- Strictness: x -}
eaa0a2f8d15411828d23f78c3671bdd9
  lassem :: TigerMunch.Instr -> GHC.Base.String
  RecSel Left TigerMunch.Instr
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: TigerMunch.Instr) ->
                 case ds of wild {
                   DEFAULT -> TigerMunch.lassem1 TigerMunch.LABEL ds1 ds2 -> ds1 }) -}
8aca079129e59a98b2ecd08e62f860ce
  lassem1 :: GHC.Base.String
  {- Strictness: x -}
eaa0a2f8d15411828d23f78c3671bdd9
  llab :: TigerMunch.Instr -> TigerTemp.Label
  RecSel Left TigerMunch.Instr
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: TigerMunch.Instr) ->
                 case ds of wild {
                   DEFAULT -> TigerMunch.llab1 TigerMunch.LABEL ds1 ds2 -> ds2 }) -}
acb3106689a7c270c9c3347cbfa8ca53
  llab1 :: TigerTemp.Label
  {- Strictness: x -}
eaa0a2f8d15411828d23f78c3671bdd9
  massem :: TigerMunch.Instr -> GHC.Base.String
  RecSel Left TigerMunch.Instr
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: TigerMunch.Instr) ->
                 case ds of wild {
                   DEFAULT -> TigerMunch.massem1
                   TigerMunch.MOVE ds1 ds2 ds3 -> ds1 }) -}
df39737b48bfec8ce0f9b1ee61035064
  massem1 :: GHC.Base.String
  {- Strictness: x -}
eaa0a2f8d15411828d23f78c3671bdd9
  mdst :: TigerMunch.Instr -> TigerTemp.Temp
  RecSel Left TigerMunch.Instr
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: TigerMunch.Instr) ->
                 case ds of wild {
                   DEFAULT -> TigerMunch.mdst1
                   TigerMunch.MOVE ds1 ds2 ds3 -> ds2 }) -}
9d104ce7e085c76027deb1b284bb54f7
  mdst1 :: TigerTemp.Temp
  {- Strictness: x -}
eaa0a2f8d15411828d23f78c3671bdd9
  msrc :: TigerMunch.Instr -> TigerTemp.Temp
  RecSel Left TigerMunch.Instr
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: TigerMunch.Instr) ->
                 case ds of wild {
                   DEFAULT -> TigerMunch.msrc1
                   TigerMunch.MOVE ds1 ds2 ds3 -> ds3 }) -}
cf5913383ef293d5f3bc415e0c87a2b5
  msrc1 :: TigerTemp.Temp
  {- Strictness: x -}
5f1ac6cea3173bb3033ec92195bb722c
  munchExp :: TigerTree.Exp -> TigerTemp.Temp
  {- Arity: 1, Strictness: <B,A>x,
     Unfolding: InlineRule (1, True, True)
                (\ (x :: TigerTree.Exp) ->
                 GHC.Err.undefined
                   @ 'GHC.Types.LiftedRep
                   @ Data.Text.Internal.Text
                   TigerMunch.munchExp1
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))) -}
f7dcc31087082f3368b0c6825fc3d9d5
  munchExp1 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   TigerMunch.munchExp9
                   TigerMunch.munchExp2
                   GHC.Stack.Types.EmptyCallStack) -}
4766ae490d92b92d26d5806d36648435
  munchExp10 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("undefined"#) -}
4a2f1549f564d47e7a49bae7bb8dfb3a
  munchExp2 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   TigerMunch.munchExp8
                   TigerMunch.munchExp7
                   TigerMunch.munchExp5
                   TigerMunch.munchExp4
                   TigerMunch.munchExp3
                   TigerMunch.munchExp4
                   TigerMunch.munchExp4) -}
7aeff1f76c17c636017f4415eac83300
  munchExp3 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 14#) -}
0f6d523664442c6c153c053f68323fe9
  munchExp4 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 23#) -}
710db308f2d0ee31a10065002750d78a
  munchExp5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TigerMunch.munchExp6) -}
01871deaae2b4b0b5a17baf348c318a6
  munchExp6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("src/TigerMunch.hs"#) -}
3f879bbb10123f75516454ce1f060ea5
  munchExp7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TigerMunch.$trModule2) -}
a1a658c5508cdd206e472d5891c9574b
  munchExp8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TigerMunch.$trModule4) -}
22c96a0acdc9c1a8c8a5df56310cc697
  munchExp9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TigerMunch.munchExp10) -}
65869f95de254f1733db2cf75e4c502a
  munchStm :: TigerTree.Stm -> ()
  {- Arity: 1, Strictness: <B,A>x,
     Unfolding: InlineRule (1, True, True)
                (\ (x :: TigerTree.Stm) ->
                 GHC.Err.undefined
                   @ 'GHC.Types.LiftedRep
                   @ ()
                   TigerMunch.munchStm1
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))) -}
20c1424aae3493a1976500552ecbb85a
  munchStm1 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   TigerMunch.munchExp9
                   TigerMunch.munchStm2
                   GHC.Stack.Types.EmptyCallStack) -}
a349f574b89347baac19d7a1f780dde8
  munchStm2 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   TigerMunch.munchExp8
                   TigerMunch.munchExp7
                   TigerMunch.munchExp5
                   TigerMunch.munchStm3
                   TigerMunch.munchExp3
                   TigerMunch.munchStm3
                   TigerMunch.munchExp4) -}
4d0101c0f66e47121636426e5eba89ed
  munchStm3 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 20#) -}
eaa0a2f8d15411828d23f78c3671bdd9
  oassem :: TigerMunch.Instr -> GHC.Base.String
  RecSel Left TigerMunch.Instr
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: TigerMunch.Instr) ->
                 case ds of wild {
                   DEFAULT -> TigerMunch.oassem1
                   TigerMunch.OPER ds1 ds2 ds3 ds4 -> ds1 }) -}
6dafab0d9572ebd4f04a31b9fbd5fa1b
  oassem1 :: GHC.Base.String
  {- Strictness: x -}
eaa0a2f8d15411828d23f78c3671bdd9
  odst :: TigerMunch.Instr -> [TigerTemp.Temp]
  RecSel Left TigerMunch.Instr
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: TigerMunch.Instr) ->
                 case ds of wild {
                   DEFAULT -> TigerMunch.odst1
                   TigerMunch.OPER ds1 ds2 ds3 ds4 -> ds2 }) -}
c6b3fa0598c5ecbeb123a7e897c6aaf9
  odst1 :: [TigerTemp.Temp]
  {- Strictness: x -}
eaa0a2f8d15411828d23f78c3671bdd9
  ojmp :: TigerMunch.Instr -> GHC.Base.Maybe [TigerTemp.Label]
  RecSel Left TigerMunch.Instr
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: TigerMunch.Instr) ->
                 case ds of wild {
                   DEFAULT -> TigerMunch.ojmp1
                   TigerMunch.OPER ds1 ds2 ds3 ds4 -> ds4 }) -}
b045425cd4ca8e4b1e250c29c254e1cf
  ojmp1 :: GHC.Base.Maybe [TigerTemp.Label]
  {- Strictness: x -}
eaa0a2f8d15411828d23f78c3671bdd9
  osrc :: TigerMunch.Instr -> [TigerTemp.Temp]
  RecSel Left TigerMunch.Instr
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: TigerMunch.Instr) ->
                 case ds of wild {
                   DEFAULT -> TigerMunch.osrc1
                   TigerMunch.OPER ds1 ds2 ds3 ds4 -> ds3 }) -}
84314757581a148269997914f07bd65b
  osrc1 :: [TigerTemp.Temp]
  {- Strictness: x -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

