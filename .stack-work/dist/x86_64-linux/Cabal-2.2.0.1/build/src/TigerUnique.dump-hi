
==================== FINAL INTERFACE ====================
2018-12-06 21:30:48.920541537 UTC

interface HaskTiger-0.1.0.0-ICRikAExwdr6IYW5QWtTsY:TigerUnique [orphan module] 8043
  interface hash: c4a57d1d47520e2c1afea5bcd066705c
  ABI hash: c609db41e14bf4ada457c59538dc0445
  export-list hash: aa23a62153d42804837397f8b85bb196
  orphan hash: 8b54f57e2d0d703f4da0eeb3963af75d
  flag hash: 9e82daa0de052769491fcb634af5683e
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  TigerUnique.evalState
  TigerUnique.StGen
  TigerUnique.Unique
  TigerUnique.UniqueGenerator{TigerUnique.mkUnique}
module dependencies: State
package dependencies: base-4.11.1.0* ghc-prim-0.5.2.0
                      integer-gmp-1.0.2.0 mtl-2.2.2 transformers-0.5.5.0
orphans: transformers-0.5.5.0:Control.Monad.Trans.Error
         base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity base-4.11.1.0:Data.Monoid
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:GHC.Generics
                         base-4.11.1.0:GHC.IO.Exception
import  -/  State 1a43ffa078c1fda9b1eb915e7dbaa853
  exports: 4352251c8724d95158cb6eed27708eb9
  St 4a2a96ef5ec06a2e5253691d8491e1d2
  State 063131fc2fe77171d0a98ac76a9c2b40
  get eedd827bd879b498277b598c4652e6d1
  modify f4aae5de9be5217ef0090b78d1048ff5
  runSt 063131fc2fe77171d0a98ac76a9c2b40
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.Num 8e54b26dce4495382dc4b50cf36ab754
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  integer-gmp-1.0.2.0:GHC.Integer.Type f3d5169c3d3830854b19f6565b265403
import  -/  mtl-2.2.2:Control.Monad.State.Class acc76e93f44ac4486524db1a327e0a0a
import  -/  mtl-2.2.2:Control.Monad.Trans 874c1e6b6644cc38b0289cb23beb0185
import  -/  transformers-0.5.5.0:Control.Monad.Trans.Class 352c7bdb1604d64f8f438c96bf57066a
fa3cec010a74596659a4defa6dcaf3a5
  $fMonadStatesState ::
    Control.Monad.State.Class.MonadState s (State.State s)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun: @ s.
                  @ s
                  @ (State.State s)
                  (State.$fMonadState @ s)
                  (TigerUnique.$fMonadStatesState3 @ s)
                    `cast`
                  (Sym (State.N:State[0] <s>_R <s>_R))
                  (TigerUnique.$fMonadStatesState2 @ s)
                    `cast`
                  (<s>_R ->_R Sym (State.N:State[0] <s>_R <()>_R))
                  (TigerUnique.$fMonadStatesState1 @ s)
                    `cast`
                  (forall (a :: <*>_N).
                   <s -> (a, s)>_R ->_R Sym (State.N:State[0] <s>_R <a>_R)) -}
4af379624997563fb303cfdc1d3086d7
  $fMonadStatesState1 :: (s -> (a, s)) -> s -> (a, s)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, True)
                (\ @ s @ a (v :: s -> (a, s)) -> v) -}
dc0d5a683c6b5a3f2b5b1c207e8f8cc8
  $fMonadStatesState2 :: s -> s -> ((), s)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><L,A>m,
     Unfolding: InlineRule (2, True, True)
                (\ @ s (s1 :: s) (ds :: s) -> (GHC.Tuple.(), s1)) -}
3826d325b7473b05533bfcc3a877b077
  $fMonadStatesState3 :: s -> (s, s)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ s (s1 :: s) -> (s1, s1)) -}
600a060adf279ccf410a39ab3ce2d43a
  $fUniqueGeneratorState ::
    TigerUnique.UniqueGenerator TigerUnique.StGen
  DFunId
  {- Arity: 1, Strictness: <L,1*U>m, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                TigerUnique.$fUniqueGeneratorState1
                  `cast`
                (Sym (State.N:State[0]
                          <GHC.Integer.Type.Integer>_R
                          <GHC.Integer.Type.Integer>_R) ; Sym (TigerUnique.N:UniqueGenerator[0]
                                                                   <TigerUnique.StGen>_N)) -}
ac603bf38cb385575eeaaca020bc3ed2
  $fUniqueGeneratorState1 ::
    GHC.Integer.Type.Integer
    -> (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer)
  {- Arity: 1, Strictness: <L,1*U>m,
     Unfolding: InlineRule (1, True, False)
                (\ (s1 :: GHC.Integer.Type.Integer) ->
                 let {
                   s :: GHC.Integer.Type.Integer
                   = GHC.Integer.Type.plusInteger
                       s1
                       TigerUnique.$fUniqueGeneratorState2
                 } in
                 (s, s)) -}
03593f5d1a6d0a4a2ac32bd5fdba208d
  $fUniqueGeneratorState2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
600a060adf279ccf410a39ab3ce2d43a
  $fUniqueGeneratort ::
    (GHC.Base.Monad m, Control.Monad.Trans.Class.MonadTrans t,
     TigerUnique.UniqueGenerator m) =>
    TigerUnique.UniqueGenerator (t m)
  DFunId
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U><C(C(S)),1*C1(C1(U))><L,U>, Inline: (sat-args=0),
     Unfolding: InlineRule (3, False, True)
                (\ @ m :: * -> *
                   @ t :: (* -> *) -> * -> *
                   ($dMonad :: GHC.Base.Monad m)
                   ($dMonadTrans :: Control.Monad.Trans.Class.MonadTrans t)
                   ($dUniqueGenerator :: TigerUnique.UniqueGenerator m) ->
                 $dMonadTrans
                   `cast`
                 (Control.Monad.Trans.Class.N:MonadTrans[0] <t>_N)
                   @ m
                   @ TigerUnique.Unique
                   $dMonad
                   $dUniqueGenerator `cast` (TigerUnique.N:UniqueGenerator[0] <m>_N))
                  `cast`
                (forall (m :: <* -> *>_N) (t :: <(* -> *) -> * -> *>_N).
                 <GHC.Base.Monad m>_R
                 ->_R <Control.Monad.Trans.Class.MonadTrans t>_R
                 ->_R <TigerUnique.UniqueGenerator m>_R
                 ->_R Sym (TigerUnique.N:UniqueGenerator[0] <t m>_N)) -}
368142bec0e373cd77471d6a977dc1cb
  $tc'C:UniqueGenerator :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5738383691406675854##
                   9341793058486842978##
                   TigerUnique.$trModule
                   TigerUnique.$tc'C:UniqueGenerator2
                   1#
                   TigerUnique.$tc'C:UniqueGenerator1) -}
2fdfd63e6b033ca8f7497c192349d9ba
  $tc'C:UniqueGenerator1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
d87133618eb87c0473e22aebb709906a
  $tc'C:UniqueGenerator2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   TigerUnique.$tc'C:UniqueGenerator3) -}
aab185543e4f3dbdc7e4cb99362c658a
  $tc'C:UniqueGenerator3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C:UniqueGenerator"#) -}
2e0bbdc32959bd04b052a6591da72d5b
  $tcUniqueGenerator :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6284385877992165638##
                   12332747834350944887##
                   TigerUnique.$trModule
                   TigerUnique.$tcUniqueGenerator2
                   0#
                   TigerUnique.$tcUniqueGenerator1) -}
5294671732d0317bf7e61cdb163bbda0
  $tcUniqueGenerator1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
bc639a4a35f876fac9a4c2b0462f368c
  $tcUniqueGenerator2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS TigerUnique.$tcUniqueGenerator3) -}
fe30e841092a2ff1f16858badc3c1c49
  $tcUniqueGenerator3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("UniqueGenerator"#) -}
21c598eff622216a6eb7c1082e221311
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   TigerUnique.$trModule3
                   TigerUnique.$trModule1) -}
c030233c981f2845c42a584c43a282f3
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS TigerUnique.$trModule2) -}
00b97b16b7e138f32254856739018a91
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("TigerUnique"#) -}
a96373c16fc2434b378601973e836b9f
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS TigerUnique.$trModule4) -}
93980041600e4569c8d5eb4dc73d44e8
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("HaskTiger-0.1.0.0-ICRikAExwdr6IYW5QWtTsY"#) -}
600da96a6f5c385280c5ea14e80af84e
  type StGen = State.State GHC.Integer.Type.Integer :: * -> *
1accfd2b00fc3aa18f150fe4c9695c4f
  type Unique = GHC.Integer.Type.Integer
600a060adf279ccf410a39ab3ce2d43a
  class UniqueGenerator (w :: * -> *) where
    mkUnique :: w TigerUnique.Unique
    {-# MINIMAL mkUnique #-}
62be03c572654e8ad39ef33db717b0d8
  evalState :: State.State s a -> s -> (a, s)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                State.runSt1
                  `cast`
                (forall (s :: <*>_N) (v :: <*>_N).
                 <State.State s v>_R ->_R State.N:State[0] <s>_R <v>_R) -}
instance [safe] [orphan] Control.Monad.State.Class.MonadState [.,
                                                               State.State]
  = TigerUnique.$fMonadStatesState
instance [safe] TigerUnique.UniqueGenerator [State.State]
  = TigerUnique.$fUniqueGeneratorState
instance [safe] TigerUnique.UniqueGenerator [.]
  = TigerUnique.$fUniqueGeneratort
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

